class Solution {
    TreeNode result;
    int deepest = 0;

    public TreeNode lcaDeepestLeaves(TreeNode root) {
        dfs(root, 0);
        return result;
    }

    private int dfs(TreeNode node, int depth) {
        if (node == null) {
            return depth;
        }

        int leftDepth = dfs(node.left, depth + 1);
        int rightDepth = dfs(node.right, depth + 1);

        int currentDepth = Math.max(leftDepth, rightDepth);
        deepest = Math.max(deepest, currentDepth);

        if (leftDepth == rightDepth && currentDepth == deepest) {
            result = node;
        }
        return currentDepth;
    }
}
